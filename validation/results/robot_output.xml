<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Rebot 3.1 (Python 3.8.5 on linux)" generated="20201130 03:27:25.093" rpa="false">
<suite id="s1" name="Test Suite" source="/opt/renode/tests/platforms/STM32F072.robot">
<kw name="Setup" library="renode-keywords" type="setup">
<msg timestamp="20201130 03:27:12.698" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
</arguments>
<assign>
<var>${SYSTEM}</var>
</assign>
<msg timestamp="20201130 03:27:12.698" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20201130 03:27:12.708" level="TRACE">Return: 'Linux'</msg>
<msg timestamp="20201130 03:27:12.709" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" starttime="20201130 03:27:12.698" endtime="20201130 03:27:12.709"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
</arguments>
<assign>
<var>${CONFIGURATION}</var>
</assign>
<msg timestamp="20201130 03:27:12.711" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20201130 03:27:12.711" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20201130 03:27:12.712" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20201130 03:27:12.710" endtime="20201130 03:27:12.712"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
</arguments>
<assign>
<var>@{PARAMS}</var>
</assign>
<msg timestamp="20201130 03:27:12.712" level="TRACE">Arguments: [ '--robot-server-port' | '9999' | '--hide-log' ]</msg>
<msg timestamp="20201130 03:27:12.713" level="TRACE">Return: ['--robot-server-port', '9999', '--hide-log']</msg>
<msg timestamp="20201130 03:27:12.713" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" starttime="20201130 03:27:12.712" endtime="20201130 03:27:12.713"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
</arguments>
<msg timestamp="20201130 03:27:12.714" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20201130 03:27:12.714" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.713" endtime="20201130 03:27:12.714"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
</arguments>
<msg timestamp="20201130 03:27:12.715" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20201130 03:27:12.715" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.714" endtime="20201130 03:27:12.715"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20201130 03:27:12.716" level="TRACE">Arguments: [ "not True and not False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20201130 03:27:12.717" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.716" endtime="20201130 03:27:12.717"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
</arguments>
<msg timestamp="20201130 03:27:12.717" level="TRACE">Arguments: [ "not True and not False and 'Linux' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20201130 03:27:12.718" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.717" endtime="20201130 03:27:12.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20201130 03:27:12.719" level="TRACE">Arguments: [ "not True and False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20201130 03:27:12.719" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.718" endtime="20201130 03:27:12.719"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
</arguments>
<msg timestamp="20201130 03:27:12.720" level="TRACE">Arguments: [ "not True and False and 'Linux' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20201130 03:27:12.720" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.719" endtime="20201130 03:27:12.720"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:12.721" level="TRACE">Arguments: [ "not 'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:12.722" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:12.724" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20201130 03:27:13.745" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20201130 03:27:13.745" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20201130 03:27:12.723" endtime="20201130 03:27:13.745"></status>
</kw>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:14.746" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20201130 03:27:15.750" level="FAIL">Getting keyword names from library 'Remote' failed: Calling dynamic method 'get_keyword_names' failed: Connecting remote server at http://127.0.0.1:9999/ failed: [Errno 111] Connection refused</msg>
<msg timestamp="20201130 03:27:15.750" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20201130 03:27:14.746" endtime="20201130 03:27:15.750"></status>
</kw>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:16.751" level="TRACE">Arguments: [ 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20201130 03:27:17.504" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:16.751" endtime="20201130 03:27:17.504"></status>
</kw>
<msg timestamp="20201130 03:27:17.504" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.722" endtime="20201130 03:27:17.504"></status>
</kw>
<msg timestamp="20201130 03:27:17.504" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.720" endtime="20201130 03:27:17.504"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>'${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://localhost:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:27:17.506" level="TRACE">Arguments: [ "'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://localhost:${PORT_NUMBER}/' ]</msg>
<msg timestamp="20201130 03:27:17.506" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:17.505" endtime="20201130 03:27:17.507"></status>
</kw>
<kw name="Set Default Uart Timeout" library="Remote">
<arguments>
<arg>${DEFAULT_UART_TIMEOUT}</arg>
</arguments>
<msg timestamp="20201130 03:27:17.508" level="TRACE">Arguments: [ '8' ]</msg>
<msg timestamp="20201130 03:27:17.568" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:17.507" endtime="20201130 03:27:17.568"></status>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20201130 03:27:17.569" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20201130 03:27:17.599" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:17.569" endtime="20201130 03:27:17.600"></status>
</kw>
<msg timestamp="20201130 03:27:17.600" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:12.697" endtime="20201130 03:27:17.600"></status>
</kw>
<kw name="Teardown" library="renode-keywords" type="teardown">
<msg timestamp="20201130 03:27:24.970" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Stop Remote Server</arg>
</arguments>
<msg timestamp="20201130 03:27:24.972" level="TRACE">Arguments: [ 'True' | 'Stop Remote Server' ]</msg>
<msg timestamp="20201130 03:27:24.972" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:24.971" endtime="20201130 03:27:24.972"></status>
</kw>
<kw name="Run Keyword Unless" library="BuiltIn">
<doc>Runs the given keyword with the given arguments if ``condition`` is false.</doc>
<arguments>
<arg>${SKIP_RUNNING_SERVER}</arg>
<arg>Wait For Process</arg>
</arguments>
<msg timestamp="20201130 03:27:24.973" level="TRACE">Arguments: [ 'True' | 'Wait For Process' ]</msg>
<msg timestamp="20201130 03:27:24.973" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:24.972" endtime="20201130 03:27:24.973"></status>
</kw>
<msg timestamp="20201130 03:27:24.974" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:24.970" endtime="20201130 03:27:24.974"></status>
</kw>
<test id="s1-t1" name="Should Handle Button Press">
<kw name="Reset Emulation" library="Remote" type="setup">
<msg timestamp="20201130 03:27:17.602" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20201130 03:27:17.608" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:17.602" endtime="20201130 03:27:17.608"></status>
</kw>
<kw name="Create Target">
<msg timestamp="20201130 03:27:17.610" level="TRACE">Arguments: [  ]</msg>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>include @peripherals/STM32F0GPIOPort.cs</arg>
</arguments>
<msg timestamp="20201130 03:27:17.610" level="TRACE">Arguments: [ 'include @peripherals/STM32F0GPIOPort.cs' ]</msg>
<msg timestamp="20201130 03:27:19.876" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:17.610" endtime="20201130 03:27:19.876"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>mach create</arg>
</arguments>
<msg timestamp="20201130 03:27:19.877" level="TRACE">Arguments: [ 'mach create' ]</msg>
<msg timestamp="20201130 03:27:19.930" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:19.877" endtime="20201130 03:27:19.930"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescription @platforms/cpus/stm32f072.repl</arg>
</arguments>
<msg timestamp="20201130 03:27:19.930" level="TRACE">Arguments: [ 'machine LoadPlatformDescription @platforms/cpus/stm32f072.repl' ]</msg>
<msg timestamp="20201130 03:27:23.418" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:19.930" endtime="20201130 03:27:23.418"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>machine LoadPlatformDescriptionFromString "button: Miscellaneous.Button @ gpioPortB 0 { IRQ -&gt; gpioPortB@0 }"</arg>
</arguments>
<msg timestamp="20201130 03:27:23.418" level="TRACE">Arguments: [ 'machine LoadPlatformDescriptionFromString "button: Miscellaneous.Button @ gpioPortB 0 { IRQ -&gt; gpioPortB@0 }"' ]</msg>
<msg timestamp="20201130 03:27:23.433" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:23.418" endtime="20201130 03:27:23.433"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>sysbus LoadELF @code/renode-test.elf</arg>
</arguments>
<msg timestamp="20201130 03:27:23.434" level="TRACE">Arguments: [ 'sysbus LoadELF @code/renode-test.elf' ]</msg>
<msg timestamp="20201130 03:27:23.489" level="FAIL">TargetInvocationException: Exception has been thrown by the target of an invocation.
KeywordException: Could not execute command 'sysbus LoadELF @code/renode-test.elf': There was an error executing command 'sysbus LoadELF @code/renode-test.elf'Error while loading ELF: Could not find file '/opt/renode/code/renode-test.elf'..Could not find file '/opt/renode/code/renode-test.elf'.
</msg>
<msg timestamp="20201130 03:27:23.489" level="DEBUG">TargetInvocationException:   at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0009a] in &lt;12b418a7818c4ca0893feeaaf67f1e7f&gt;:0 
  at System.Reflection.MethodBase.Invoke (System.Object obj, System.Object[] parameters) [0x00000] in &lt;12b418a7818c4ca0893feeaaf67f1e7f&gt;:0 
  at Antmicro.Renode.RobotFramework.Keyword.Execute (System.Object[] arguments) [0x00017] in &lt;54e5513cc1a84ec3b4be315b5c410b79&gt;:0 
  at Antmicro.Renode.RobotFramework.KeywordManager.TryExecuteKeyword (System.String keywordName, System.String[] arguments, System.Object&amp; keywordResult) [0x0005a] in &lt;54e5513cc1a84ec3b4be315b5c410b79&gt;:0 
  at Antmicro.Renode.RobotFramework.XmlRpcServer.RunKeyword (System.String keywordName, System.String[] arguments) [0x00008] in &lt;54e5513cc1a84ec3b4be315b5c410b79&gt;:0 
KeywordException:   at Antmicro.Renode.RobotFramework.RenodeKeywords.ExecuteCommand (System.String command, System.String machine) [0x00080] in &lt;54e5513cc1a84ec3b4be315b5c410b79&gt;:0 
  at (wrapper managed-to-native) System.Reflection.RuntimeMethodInfo.InternalInvoke(System.Reflection.RuntimeMethodInfo,object,object[],System.Exception&amp;)
  at System.Reflection.RuntimeMethodInfo.Invoke (System.Object obj, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, System.Object[] parameters, System.Globalization.CultureInfo culture) [0x0007c] in &lt;12b418a7818c4ca0893feeaaf67f1e7f&gt;:0 
</msg>
<status status="FAIL" starttime="20201130 03:27:23.434" endtime="20201130 03:27:23.490"></status>
</kw>
<status status="FAIL" starttime="20201130 03:27:17.609" endtime="20201130 03:27:23.491"></status>
</kw>
<kw name="Test Teardown" library="renode-keywords" type="teardown">
<msg timestamp="20201130 03:27:23.492" level="TRACE">Arguments: [  ]</msg>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${CREATE_SNAPSHOT_ON_FAIL}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Create Snapshot Of Failed Test</arg>
</arguments>
<msg timestamp="20201130 03:27:23.493" level="TRACE">Arguments: [ 'True' | 'Run Keyword If Test Failed' | 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Run Keyword If Test Failed" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if the test failed.</doc>
<arguments>
<arg>Create Snapshot Of Failed Test</arg>
</arguments>
<msg timestamp="20201130 03:27:23.495" level="TRACE">Arguments: [ 'Create Snapshot Of Failed Test' ]</msg>
<kw name="Create Snapshot Of Failed Test" library="renode-keywords">
<msg timestamp="20201130 03:27:23.495" level="TRACE">Arguments: [  ]</msg>
<kw name="Return From Keyword If" library="BuiltIn">
<doc>Returns from the enclosing user keyword if ``condition`` is true.</doc>
<arguments>
<arg>'skipped' in @{TEST TAGS}</arg>
</arguments>
<msg timestamp="20201130 03:27:23.496" level="TRACE">Arguments: [ "'skipped' in ['Smoke Tests']" ]</msg>
<msg timestamp="20201130 03:27:23.496" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.496" endtime="20201130 03:27:23.496"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${SUITE NAME}.${TEST NAME}.fail.save</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20201130 03:27:23.497" level="TRACE">Arguments: [ 'STM32F072.Should Handle Button Press.fail.save' ]</msg>
<msg timestamp="20201130 03:27:23.497" level="TRACE">Return: 'STM32F072.Should Handle Button Press.fail.save'</msg>
<msg timestamp="20201130 03:27:23.498" level="INFO">${test_name} = STM32F072.Should Handle Button Press.fail.save</msg>
<status status="PASS" starttime="20201130 03:27:23.497" endtime="20201130 03:27:23.498"></status>
</kw>
<kw name="Replace String" library="String">
<doc>Replaces ``search_for`` in the given ``string`` with ``replace_with``.</doc>
<arguments>
<arg>${test_name}</arg>
<arg>${SPACE}</arg>
<arg>_</arg>
</arguments>
<assign>
<var>${test_name}</var>
</assign>
<msg timestamp="20201130 03:27:23.498" level="TRACE">Arguments: [ 'STM32F072.Should Handle Button Press.fail.save' | ' ' | '_' ]</msg>
<msg timestamp="20201130 03:27:23.499" level="TRACE">Return: 'STM32F072.Should_Handle_Button_Press.fail.save'</msg>
<msg timestamp="20201130 03:27:23.499" level="INFO">${test_name} = STM32F072.Should_Handle_Button_Press.fail.save</msg>
<status status="PASS" starttime="20201130 03:27:23.498" endtime="20201130 03:27:23.499"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>/opt/renode/tests/../../../output/tests/snapshots</arg>
</arguments>
<assign>
<var>${snapshots_dir}</var>
</assign>
<msg timestamp="20201130 03:27:23.500" level="TRACE">Arguments: [ '/opt/renode/tests/../../../output/tests/snapshots' ]</msg>
<msg timestamp="20201130 03:27:23.500" level="TRACE">Return: '/opt/renode/tests/../../../output/tests/snapshots'</msg>
<msg timestamp="20201130 03:27:23.500" level="INFO">${snapshots_dir} = /opt/renode/tests/../../../output/tests/snapshots</msg>
<status status="PASS" starttime="20201130 03:27:23.500" endtime="20201130 03:27:23.501"></status>
</kw>
<kw name="Create Directory" library="OperatingSystem">
<doc>Creates the specified directory.</doc>
<arguments>
<arg>${snapshots_dir}</arg>
</arguments>
<msg timestamp="20201130 03:27:23.501" level="TRACE">Arguments: [ '/opt/renode/tests/../../../output/tests/snapshots' ]</msg>
<msg timestamp="20201130 03:27:23.504" level="INFO" html="yes">Created directory '&lt;a href="file:///output/tests/snapshots"&gt;/output/tests/snapshots&lt;/a&gt;'.</msg>
<msg timestamp="20201130 03:27:23.504" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.501" endtime="20201130 03:27:23.504"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>"${snapshots_dir}/${test_name}"</arg>
</arguments>
<assign>
<var>${snapshot_path}</var>
</assign>
<msg timestamp="20201130 03:27:23.505" level="TRACE">Arguments: [ '"/opt/renode/tests/../../../output/tests/snapshots/STM32F072.Should_Handle_Button_Press.fail.save"' ]</msg>
<msg timestamp="20201130 03:27:23.505" level="TRACE">Return: '"/opt/renode/tests/../../../output/tests/snapshots/STM32F072.Should_Handle_Button_Press.fail.save"'</msg>
<msg timestamp="20201130 03:27:23.505" level="INFO">${snapshot_path} = "/opt/renode/tests/../../../output/tests/snapshots/STM32F072.Should_Handle_Button_Press.fail.save"</msg>
<status status="PASS" starttime="20201130 03:27:23.505" endtime="20201130 03:27:23.505"></status>
</kw>
<kw name="Execute Command" library="Remote">
<arguments>
<arg>Save ${snapshot_path}</arg>
</arguments>
<msg timestamp="20201130 03:27:23.506" level="TRACE">Arguments: [ 'Save "/opt/renode/tests/../../../output/tests/snapshots/STM32F072.Should_Handle_Button_Press.fail.save"' ]</msg>
<msg timestamp="20201130 03:27:24.902" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:23.506" endtime="20201130 03:27:24.902"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>!!!!! Emulation's state saved to ${snapshot_path}</arg>
</arguments>
<msg timestamp="20201130 03:27:24.903" level="TRACE">Arguments: [ '!!!!! Emulation\'s state saved to "/opt/renode/tests/../../../output/tests/snapshots/STM32F072.Should_Handle_Button_Press.fail.save"' ]</msg>
<msg timestamp="20201130 03:27:24.903" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:24.902" endtime="20201130 03:27:24.903"></status>
</kw>
<msg timestamp="20201130 03:27:24.904" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.495" endtime="20201130 03:27:24.904"></status>
</kw>
<msg timestamp="20201130 03:27:24.904" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.494" endtime="20201130 03:27:24.904"></status>
</kw>
<msg timestamp="20201130 03:27:24.904" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.492" endtime="20201130 03:27:24.904"></status>
</kw>
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>Import Library</arg>
<arg>Dialogs</arg>
</arguments>
<assign>
<var>${res}</var>
</assign>
<msg timestamp="20201130 03:27:24.905" level="TRACE">Arguments: [ 'Import Library' | 'Dialogs' ]</msg>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Dialogs</arg>
</arguments>
<msg timestamp="20201130 03:27:24.905" level="TRACE">Arguments: [ 'Dialogs' ]</msg>
<msg timestamp="20201130 03:27:24.908" level="TRACE">Return: None</msg>
<msg timestamp="20201130 03:27:24.908" level="FAIL">Importing test library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'
Traceback (most recent call last):
  None
PYTHONPATH:
  /opt/renode/tests
  /usr/lib/python38.zip
  /usr/lib/python3.8
  /usr/lib/python3.8/lib-dynload
  /usr/local/lib/python3.8/dist-packages
  /usr/lib/python3/dist-packages</msg>
<msg timestamp="20201130 03:27:24.908" level="DEBUG">Traceback (most recent call last):
  None</msg>
<status status="FAIL" starttime="20201130 03:27:24.905" endtime="20201130 03:27:24.908"></status>
</kw>
<msg timestamp="20201130 03:27:24.909" level="TRACE">Return: ('FAIL', "Importing test library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /opt/renode/tests\n  /usr/lib/python38.zip\n  /usr/lib/python3.8\n  /usr/lib/python3.8/lib-dynload\n  /usr/local/lib/python3.8/dist-packages\n  /usr/lib/python3/dist-packages")</msg>
<msg timestamp="20201130 03:27:24.909" level="INFO">${res} = ('FAIL', "Importing test library 'robot.libraries.Dialogs' failed: ModuleNotFoundError: No module named 'tkinter'\nTraceback (most recent call last):\n  None\nPYTHONPATH:\n  /opt/renode/tests\n  /usr/...</msg>
<status status="PASS" starttime="20201130 03:27:24.905" endtime="20201130 03:27:24.909"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${HOLD_ON_ERROR}</arg>
<arg>Run Keyword If Test Failed</arg>
<arg>Run Keywords</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' == 'FAIL'</arg>
<arg>Log</arg>
<arg>Couldn't load the Dialogs library - interactive debugging is not possible</arg>
<arg>console=True</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Open GUI</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Pause Execution</arg>
<arg>Test failed. Press OK once done debugging.</arg>
<arg>AND</arg>
<arg>Run Keyword If</arg>
<arg>'${res[0]}' != 'FAIL'</arg>
<arg>Close GUI</arg>
</arguments>
<msg timestamp="20201130 03:27:24.911" level="TRACE">Arguments: [ 'False' | 'Run Keyword If Test Failed' | 'Run Keywords' | 'Run Keyword If' | "'${res[0]}' == 'FAIL'" | 'Log' | "Couldn't load the Dialogs library - interactive debugging is not possible" | 'console=True' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Open GUI' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Pause Execution' | 'Test failed. Press OK once done debugging.' | 'AND' | 'Run Keyword If' | "'${res[0]}' != 'FAIL'" | 'Close GUI' ]</msg>
<msg timestamp="20201130 03:27:24.912" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:24.910" endtime="20201130 03:27:24.912"></status>
</kw>
<kw name="Reset Emulation" library="Remote">
<msg timestamp="20201130 03:27:24.912" level="TRACE">Arguments: [  ]</msg>
<msg timestamp="20201130 03:27:24.967" level="TRACE">Return: ''</msg>
<status status="PASS" starttime="20201130 03:27:24.912" endtime="20201130 03:27:24.967"></status>
</kw>
<msg timestamp="20201130 03:27:24.967" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:27:23.491" endtime="20201130 03:27:24.967"></status>
</kw>
<tags>
<tag>Smoke Tests</tag>
</tags>
<status status="FAIL" starttime="20201130 03:27:17.600" endtime="20201130 03:27:24.968" critical="yes">TargetInvocationException: Exception has been thrown by the target of an invocation.
KeywordException: Could not execute command 'sysbus LoadELF @code/renode-test.elf': There was an error executing command 'sysbus LoadELF @code/renode-test.elf'Error while loading ELF: Could not find file '/opt/renode/code/renode-test.elf'..Could not find file '/opt/renode/code/renode-test.elf'.
</status>
</test>
<metadata>
<item name="HotSpot_Action">-</item>
</metadata>
<status status="FAIL" starttime="20201130 03:27:12.543" endtime="20201130 03:27:24.974"></status>
</suite>
<statistics>
<total>
<stat pass="0" fail="1">Critical Tests</stat>
<stat pass="0" fail="1">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="1">Smoke Tests</stat>
</tag>
<suite>
<stat pass="0" fail="1" id="s1" name="Test Suite">Test Suite</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
