<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1 (Python 3.8.5 on linux)" generated="20201130 03:28:15.934" rpa="false">
<suite id="s1" name="STM32F072" source="/opt/renode/tests/platforms/STM32F072.robot">
<kw name="Setup" library="renode-keywords" type="setup">
<msg timestamp="20201130 03:28:16.104" level="TRACE">Arguments: [  ]</msg>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>platform.system()</arg>
<arg>modules=platform</arg>
</arguments>
<assign>
<var>${SYSTEM}</var>
</assign>
<msg timestamp="20201130 03:28:16.105" level="TRACE">Arguments: [ 'platform.system()' | modules='platform' ]</msg>
<msg timestamp="20201130 03:28:16.117" level="TRACE">Return: 'Linux'</msg>
<msg timestamp="20201130 03:28:16.118" level="INFO">${SYSTEM} = Linux</msg>
<status status="PASS" starttime="20201130 03:28:16.105" endtime="20201130 03:28:16.118"></status>
</kw>
<kw name="Set Variable If" library="BuiltIn">
<doc>Sets variable based on the given condition.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG}</arg>
<arg>Debug</arg>
<arg>${CONFIGURATION}</arg>
</arguments>
<assign>
<var>${CONFIGURATION}</var>
</assign>
<msg timestamp="20201130 03:28:16.119" level="TRACE">Arguments: [ 'not True and False' | 'Debug' | '${CONFIGURATION}' ]</msg>
<msg timestamp="20201130 03:28:16.120" level="TRACE">Return: 'Release'</msg>
<msg timestamp="20201130 03:28:16.120" level="INFO">${CONFIGURATION} = Release</msg>
<status status="PASS" starttime="20201130 03:28:16.118" endtime="20201130 03:28:16.120"></status>
</kw>
<kw name="Create List" library="BuiltIn">
<doc>Returns a list containing given items.</doc>
<arguments>
<arg>--robot-server-port</arg>
<arg>${PORT_NUMBER}</arg>
<arg>--hide-log</arg>
</arguments>
<assign>
<var>@{PARAMS}</var>
</assign>
<msg timestamp="20201130 03:28:16.121" level="TRACE">Arguments: [ '--robot-server-port' | '9999' | '--hide-log' ]</msg>
<msg timestamp="20201130 03:28:16.121" level="TRACE">Return: ['--robot-server-port', '9999', '--hide-log']</msg>
<msg timestamp="20201130 03:28:16.122" level="INFO">@{PARAMS} = [ --robot-server-port | 9999 | --hide-log ]</msg>
<status status="PASS" starttime="20201130 03:28:16.120" endtime="20201130 03:28:16.122"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>${DISABLE_XWT}</arg>
<arg>Insert Into List</arg>
<arg>${PARAMS}</arg>
<arg>0</arg>
<arg>--disable-xwt</arg>
</arguments>
<msg timestamp="20201130 03:28:16.123" level="TRACE">Arguments: [ 'False' | 'Insert Into List' | '${PARAMS}' | '0' | '--disable-xwt' ]</msg>
<msg timestamp="20201130 03:28:16.123" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.122" endtime="20201130 03:28:16.123"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER}</arg>
<arg>File Should Exist</arg>
<arg>${DIRECTORY}/${BINARY_NAME}</arg>
<arg>msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?</arg>
</arguments>
<msg timestamp="20201130 03:28:16.124" level="TRACE">Arguments: [ 'not True' | 'File Should Exist' | '${DIRECTORY}/${BINARY_NAME}' | 'msg=Robot Framework remote server binary not found (${DIRECTORY}/${BINARY_NAME}). Did you forget to build it in ${CONFIGURATION} configuration?' ]</msg>
<msg timestamp="20201130 03:28:16.125" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.124" endtime="20201130 03:28:16.125"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20201130 03:28:16.126" level="TRACE">Arguments: [ "not True and not False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20201130 03:28:16.126" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.125" endtime="20201130 03:28:16.126"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and not ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
<arg>shell=true</arg>
</arguments>
<msg timestamp="20201130 03:28:16.127" level="TRACE">Arguments: [ "not True and not False and 'Linux' == 'Windows'" | 'Start Process' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' | 'shell=true' ]</msg>
<msg timestamp="20201130 03:28:16.127" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.127" endtime="20201130 03:28:16.127"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and not '${SYSTEM}' == 'Windows'</arg>
<arg>Start Process</arg>
<arg>mono</arg>
<arg>--debug</arg>
<arg>--debugger-agent\=transport\=dt_socket,address\=0.0.0.0:${SERVER_REMOTE_PORT},server\=y,suspend\=${SERVER_REMOTE_SUSPEND}</arg>
<arg>${BINARY_NAME}</arg>
<arg>@{PARAMS}</arg>
<arg>cwd=${DIRECTORY}</arg>
</arguments>
<msg timestamp="20201130 03:28:16.128" level="TRACE">Arguments: [ "not True and False and not 'Linux' == 'Windows'" | 'Start Process' | 'mono' | '--debug' | '--debugger-agent\\=transport\\=dt_socket,address\\=0.0.0.0:${SERVER_REMOTE_PORT},server\\=y,suspend\\=${SERVER_REMOTE_SUSPEND}' | '${BINARY_NAME}' | '@{PARAMS}' | 'cwd=${DIRECTORY}' ]</msg>
<msg timestamp="20201130 03:28:16.128" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.128" endtime="20201130 03:28:16.129"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not ${SKIP_RUNNING_SERVER} and ${SERVER_REMOTE_DEBUG} and '${SYSTEM}' == 'Windows'</arg>
<arg>Fatal Error</arg>
<arg>Windows doesn't support server remote debug option.</arg>
</arguments>
<msg timestamp="20201130 03:28:16.129" level="TRACE">Arguments: [ "not True and False and 'Linux' == 'Windows'" | 'Fatal Error' | "Windows doesn't support server remote debug option." ]</msg>
<msg timestamp="20201130 03:28:16.129" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20201130 03:28:16.129" endtime="20201130 03:28:16.130"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>not '${SYSTEM}' == 'Windows'</arg>
<arg>Wait Until Keyword Succeeds</arg>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:28:16.131" level="TRACE">Arguments: [ "not 'Linux' == 'Windows'" | 'Wait Until Keyword Succeeds' | '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Wait Until Keyword Succeeds" library="BuiltIn">
<doc>Runs the specified keyword and retries if it fails.</doc>
<arguments>
<arg>60s</arg>
<arg>1s</arg>
<arg>Import Library</arg>
<arg>Remote</arg>
<arg>http://127.0.0.1:${PORT_NUMBER}/</arg>
</arguments>
<msg timestamp="20201130 03:28:16.132" level="TRACE">Arguments: [ '60s' | '1s' | 'Import Library' | 'Remote' | 'http://127.0.0.1:${PORT_NUMBER}/' ]</msg>
<kw name="Import Library" library="BuiltIn">
<doc>Imports a library with the given name and optional arguments.</doc>
<arguments>
<arg>Remote</arg>